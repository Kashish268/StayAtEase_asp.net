@model WebApplication1.Models.PropertyReviewViewModel

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin Dashboard";
    ViewData["ActivePage"] = "Reviews";

    var paginatedReviews = Model.Reviews;
    int totalReviews = Model.TotalReviews;
    int currentPage = Model.CurrentPage;
    int totalPages = (int)Math.Ceiling((double)totalReviews / Model.ReviewsPerPage);
    string searchTerm = Model.SearchTerm;
}

<div class="container mt-5">
    <h3 class="fw-bold mb-4">Property Reviews</h3>

    <!-- Search -->
    <form method="get" class="row mb-4">
        <div class="col-12">
            <input type="text" name="searchTerm" class="form-control border rounded" placeholder="Search reviews..." value="@searchTerm" />
        </div>

    </form>

    <!-- Reviews Table -->
    <div class="table-responsive">
        <table class="table">
            <thead class="bg-light">
                <tr>
                    <th>Reviewer</th>
                    <th>Property ID</th>
                    <th>Property Title</th>
                    <th>Date</th>
                    <th>Rating</th>
                    <th>Review</th>
                  
                   
                </tr>
            </thead>
            <tbody>
                @if (paginatedReviews.Any())
                {
                    @foreach (var review in paginatedReviews)
                    {
                        <tr>
                            <td>
                                <img src="@review.ImageUrl" alt="Reviewer" class="rounded-circle me-2" width="40" height="40" />
                                <span>@review.Name</span>
                            </td>
                            <td>@review.Property</td>
                            <td>@review.PropertyTitle</td>
                            <td>@review.Date</td>
                            <td>
                                @for (int i = 0; i < review.Rating; i++)
                                {
                                    <i class="fas fa-star text-warning"></i>
                                }
                                @for (int i = review.Rating; i < 5; i++)
                                {
                                    <i class="far fa-star text-muted"></i>
                                }
                            </td>
                            <td>@review.ReviewText</td>
                           
                         
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center text-muted py-4">No reviews found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-4 pb-4">
        <p class="text-muted small">
            Showing @(Math.Min(((currentPage - 1) * Model.ReviewsPerPage) + 1, totalReviews))
            to @(Math.Min(currentPage * Model.ReviewsPerPage, totalReviews))
            of @totalReviews reviews
        </p>
        <nav>
            <ul class="pagination mb-0">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage - 1)&searchTerm=@searchTerm">Previous</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" href="?page=@i&searchTerm=@searchTerm">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage + 1)&searchTerm=@searchTerm">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
