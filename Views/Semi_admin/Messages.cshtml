@model WebApplication1.Models.PropertyMessageViewModel

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Admin Dashboard";
    ViewData["ActivePage"] = "Messages";

    var paginatedMessages = Model.PagedMessages;
    int totalMessages = Model.TotalMessages;
    int currentPage = Model.CurrentPage;
    int totalPages = (int)Math.Ceiling((double)totalMessages / Model.MessagesPerPage);
    string searchTerm = Model.SearchTerm;
  
}

<div class="container mt-5">
    <h3 class="fw-bold mb-4">All Property Messages</h3>

    <!-- Search & Filter -->
    <form method="get" class="row mb-4">
        <div class="col-12 mb-3">
            <input type="text" id="searchInput" class="form-control w-100  border rounded" placeholder="Search messages..." value="@searchTerm" />
        </div>
      
    </form>

    <!-- Messages Table -->
    <div class="table-responsive">
        <table class="table">
            <thead class="bg-light">
                <tr>
                    <th>Guest Name</th>
                    <th>Property Title</th>
                    <th>Email</th>
                    <th>Contact</th>
                    <th>Message</th>
                </tr>
            </thead>
            <tbody id="messageList">
                @if (Model.PagedMessages.Any())
                {
                    @foreach (var msg in Model.PagedMessages)
                    {
                        <tr class="message-row">
                            <td>@msg.Name</td>
                            <td>@msg.PropertyTitle</td>
                            <td>@msg.Email</td>
                            <td>@msg.Contact</td>
                            <td>@msg.Message</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="text-center text-muted py-4">No messages found.</td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mt-4 pb-4">
        <p class="text-muted small">
            Showing @Model.FirstItemIndex to @Model.LastItemIndex of @totalMessages messages
        </p>
        <nav>
            <ul class="pagination mb-0">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage - 1)&searchTerm=@searchTerm">Previous</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" href="?page=@i&searchTerm=@searchTerm">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="?page=@(currentPage + 1)&searchTerm=@searchTerm">Next</a>
                </li>
            </ul>
        </nav>

    </div>
</div>
<script>
    document.getElementById("searchInput").addEventListener("input", function () {
        const term = this.value.toLowerCase().trim();
        const rows = document.querySelectorAll("#messageList .message-row");
        const noMessagesRow = document.getElementById("noMessagesRow");

        let visibleCount = 0;

        rows.forEach(row => {
            const content = row.textContent.toLowerCase();
            const match = content.includes(term);
            row.style.display = match ? "" : "none";
            if (match) visibleCount++;
        });

        // Toggle "No messages found" row based on visibility count
        noMessagesRow.style.display = visibleCount === 0 ? "" : "none";
    });
</script>



