@model WebApplication1.Models.PropertyMessageViewModel

@{
    ViewBag.Title = "Inquiries";
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
}

<link rel="stylesheet" href="~/Content/site.css" />

<div class="total-users-container">
    <h2 class="total-users-title">All Property Messages</h2>

    <div class="search-container">
        <i class="fas fa-search search-icon"></i>
        <form method="get" action="@Url.Action("Inquiries")">
            <input type="text" id="searchMessages" name="searchTerm" class="total-users-search" placeholder="Search messages..." value="@Model.SearchTerm" />
            <button type="submit">Search</button>
        </form>
    </div>

    <div class="total-users-table-container">
        <table class="total-users-table">
            <thead>
                <tr>
                    <th>Guest Name</th>
                    <th>Property ID</th>
                    <th>Email Address</th>
                    <th>Contact No</th>
                    <th>Message</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="messageTableBody">
                @if (Model != null)
                {
                    @foreach (var message in Model.PagedMessages)
                    {
                        <tr>
                            <td>@message.Name</td>
                            <td>@message.PropertyId</td>
                            <td>@message.Email</td>
                            <td>@message.Contact</td>
                            <td>@message.Message</td>
                            <td>
                                <a href="#">View</a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" style="text-align: center;">No messages found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="total-users-pagination">
        <div id="pagination-info"></div>
        <div id="pagination-buttons"></div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tableBody = document.getElementById("messageTableBody");
        const rows = Array.from(tableBody.querySelectorAll("tr"));
        const paginationButtons = document.getElementById("pagination-buttons");
        const paginationInfo = document.getElementById("pagination-info");

        const rowsPerPage = 6;
        let currentPage = 1;

        function renderTablePage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            rows.forEach((row, index) => {
                row.style.display = index >= start && index < end ? "" : "none";
            });

            paginationInfo.textContent = `Showing ${Math.min(start + 1, rows.length)} to ${Math.min(end, rows.length)} of ${rows.length} messages`;
        }

        function renderPaginationButtons() {
            paginationButtons.innerHTML = "";
            const totalPages = Math.ceil(rows.length / rowsPerPage);

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.textContent = i;
                button.className = `pagination-btn ${i === currentPage ? "active" : ""}`;
                button.addEventListener("click", () => {
                    currentPage = i;
                    renderTablePage(currentPage);
                    renderPaginationButtons();
                });
                paginationButtons.appendChild(button);
            }
        }

        // Initialize pagination
        if (rows.length > 0) {
            renderTablePage(currentPage);
            renderPaginationButtons();
        }
    });
</script>
