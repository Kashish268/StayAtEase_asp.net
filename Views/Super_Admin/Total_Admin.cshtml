@{
    ViewBag.Title = "Super Admin Dashboard";
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
}

<link rel="stylesheet" href="~/Content/site.css" />

<div class="total-users-container">
    <h2 class="total-users-title">Property Owners</h2>

    <div class="total-users-wrapper">

        <div class="search-container">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="total-users-search" placeholder="Search users...">
        </div>

        <div class="total-users-table-container">
            <table class="total-users-table">
                <thead>
                    <tr>
                        <th>Id</th>
                        <th>Name</th>
                        <th>Mobile</th>
                        <th>Created</th>
                        <th>Status</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="adminTableBody">
                    @if (Model != null)
                    {
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.UserId</td>
                                <td>@user.Name</td>
                                <td>@user.Mobile</td>
                                <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                                <td>@user.Status</td>
                                <td>
                                    <form asp-action="Total_Admin" method="post" onsubmit="return confirm('Are you sure you want to delete this user?');" style="display:inline;">
                                        <input type="hidden" name="id" value="@user.UserId" />
                                        <button type="submit" style="background:none;border:none;color:red;" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" style="text-align: center;">No property owners found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="total-users-pagination">
        <div id="pagination-info"></div>
        <div id="pagination-buttons"></div>
    </div>
</div>

<script src="~/js/site.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tableBody = document.getElementById("adminTableBody");
        const rows = Array.from(tableBody.querySelectorAll("tr"));
        const paginationButtons = document.getElementById("pagination-buttons");
        const paginationInfo = document.getElementById("pagination-info");

        const rowsPerPage = 6;
        let currentPage = 1;

        function renderTablePage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            rows.forEach((row, index) => {
                row.style.display = index >= start && index < end ? "" : "none";
            });

            paginationInfo.textContent = `Showing ${Math.min(start + 1, rows.length)} to ${Math.min(end, rows.length)} of ${rows.length} property owners`;
        }

        function renderPaginationButtons() {
            paginationButtons.innerHTML = "";
            const totalPages = Math.ceil(rows.length / rowsPerPage);

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.textContent = i;
                button.className = `pagination-btn ${i === currentPage ? "active" : ""}`;
                button.addEventListener("click", () => {
                    currentPage = i;
                    renderTablePage(currentPage);
                    renderPaginationButtons();
                });
                paginationButtons.appendChild(button);
            }
        }

        // Initialize pagination
        if (rows.length > 0) {
            renderTablePage(currentPage);
            renderPaginationButtons();
        }
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.getElementById("searchMessages");
        const tableBody = document.getElementById("messageTableBody");

        searchInput.addEventListener("input", function () {
            const query = searchInput.value.toLowerCase();
            const rows = tableBody.getElementsByTagName("tr");

            Array.from(rows).forEach(row => {
                const cells = row.getElementsByTagName("td");
                let matchFound = false;

                // Loop through each cell in the row
                Array.from(cells).forEach(cell => {
                    if (cell.textContent.toLowerCase().includes(query)) {
                        matchFound = true;
                    }
                });

                // Toggle row visibility based on match
                row.style.display = matchFound ? "" : "none";
            });
        });
    });

</script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.querySelector(".total-users-search");
        const tableBody = document.getElementById("adminTableBody");

        searchInput.addEventListener("input", function () {
            const query = searchInput.value.toLowerCase();
            const rows = tableBody.querySelectorAll("tr");
            let matchFound = false;

            rows.forEach(row => {
                const rowText = row.textContent.toLowerCase();
                const isMatch = rowText.includes(query);
                row.style.display = isMatch ? "" : "none";
                if (isMatch) matchFound = true;
            });

            // Handle "Not found" row
            let noResultRow = tableBody.querySelector(".no-result");
            if (!matchFound) {
                if (!noResultRow) {
                    noResultRow = document.createElement("tr");
                    noResultRow.classList.add("no-result");
                    noResultRow.innerHTML = `<td colspan="6" style="text-align:center; color:#999;">Not found</td>`;
                    tableBody.appendChild(noResultRow);
                }
            } else {
                if (noResultRow) noResultRow.remove();
            }
        });
    });
</script>