@model List<PropertyReview>

@{
    ViewBag.Title = "Property Reviews";
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
}

<link rel="stylesheet" href="~/Content/site.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />

<div class="total-users-container">
    <h2 class="total-users-title">Property Reviews</h2>

    <div class="search-container">
        <i class="fas fa-search search-icon"></i>
        <input type="text" class="total-users-search" id="searchInput" placeholder="Search reviews...">
    </div>

    <div class="total-users-table-container">
        <table class="total-users-table">
            <thead>
                <tr>
                    <th>Property ID</th>
                    <th>Property Title</th>
                    <th>Reviewer</th>
                    <th>Date</th>
                    <th>Rating</th>
                    <th>Review</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="reviewsTableBody">
                @if (Model != null)
                {
                    @foreach (var review in Model)
                    {
                        <tr>
                            <td>@review.Property</td>
                            <td>@review.PropertyTitle</td>
                            <td>@review.Name</td>
                            <td>@review.Date</td>
                            <td>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= review.Rating)
                                    {
                                        <i class="fas fa-star" style="color: gold;"></i>
                                    }
                                    else
                                    {
                                        <i class="far fa-star" style="color: gold;"></i>
                                    }
                                }
                            </td>

                            <td>@review.ReviewText</td>
                            <td>
                                <!-- Review Deletion Form -->
                                <form asp-action="DeleteReview" method="post" onsubmit="return confirm('Are you sure you want to delete this review?');">
                                    <input type="hidden" name="id" value="@review.Id" />
                                    <button type="submit" style="background:none;border:none;color:red;" title="Delete">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" style="text-align: center;">No reviews found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="total-users-pagination">
        <div id="pagination-info"></div>
        <div id="pagination-buttons"></div>
    </div>
</div>

<script src="~/js/site.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const tableBody = document.getElementById("reviewsTableBody");
        const rows = Array.from(tableBody.querySelectorAll("tr"));
        const paginationButtons = document.getElementById("pagination-buttons");
        const paginationInfo = document.getElementById("pagination-info");

        const rowsPerPage = 6;
        let currentPage = 1;

        function renderTablePage(page) {
            const start = (page - 1) * rowsPerPage;
            const end = start + rowsPerPage;

            rows.forEach((row, index) => {
                row.style.display = index >= start && index < end ? "" : "none";
            });

            paginationInfo.textContent = `Showing ${Math.min(start + 1, rows.length)} to ${Math.min(end, rows.length)} of ${rows.length} reviews`;
        }

        function renderPaginationButtons() {
            paginationButtons.innerHTML = "";
            const totalPages = Math.ceil(rows.length / rowsPerPage);

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement("button");
                button.textContent = i;
                button.className = `pagination-btn ${i === currentPage ? "active" : ""}`;
                button.addEventListener("click", () => {
                    currentPage = i;
                    renderTablePage(currentPage);
                    renderPaginationButtons();
                });
                paginationButtons.appendChild(button);
            }
        }

        // Initialize pagination
        if (rows.length > 0) {
            renderTablePage(currentPage);
            renderPaginationButtons();
        }
    });
</script>
